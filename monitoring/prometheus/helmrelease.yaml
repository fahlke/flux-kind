apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
spec:
  releaseName: prometheus
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: prometheus
      version: 47.1.0
  interval: 1h0m0s
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  # https://github.com/prometheus-community/helm-charts/blob/kube-prometheus-stack-47.1.0/charts/kube-prometheus-stack/values.yaml
  values:
    #alertmanager:
    #  alertmanagerSpec:
    #    routePrefix: /alertmanager
    #  ingress:
    #    enabled: false
    #    ingressClassName: kong
    #    hosts:
    #    - localhost
    #    pathType: ImplementationSpecific
    #    paths:
    #    - /alertmanager(/|$)(.*)

    prometheus:
      prometheusSpec:
        retention: 24h
        #routePrefix: /prometheus
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorNamespaceSelector:
          matchLabels:
            prometheus.io/namespace.enabled: "yes"
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorNamespaceSelector:
          matchLabels:
            prometheus.io/namespace.enabled: "yes"
        probeSelectorNilUsesHelmValues: false
        probeNamespaceSelector:
          matchLabels:
            prometheus.io/namespace.enabled: "yes"
        ruleSelectorNilUsesHelmValues: false
        ruleNamespaceSelector:
          matchLabels:
            prometheus.io/namespace.enabled: "yes"
        resources:
          requests:
            cpu: 1000m
            memory: 250Mi
      #ingress:
      #  enabled: true
      #  ingressClassName: kong
      #  hosts:
      #  - localhost
      #  pathType: ImplementationSpecific
      #  paths:
      #  - /prometheus(/|$)(.*)

    grafana:
      sidecar:
        dashboards:
          searchNamespace: ALL
      enabled: true
      #ingress:
      #  enabled: false
      #  ingressClassName: kong
      #  hosts:
      #  - localhost
      #  pathType: ImplementationSpecific
      #  path: /grafana(/|$)(.*)
      grafana.ini:
        #server:
        #  domain: localhost
        #  root_url: http://localhost/grafana
        #  serve_from_sub_path: true
        users:
          viewers_can_edit: true
        auth:
          disable_login_form: true
          disable_signout_menu: true
        auth.anonymous:
          enabled: true
          org_role: Viewer
        log.console:
          format: json
        
        # additional dashboards for Linkerd-Viz
        # ref: https://linkerd.io/2.13/tasks/grafana/#install-grafana
        # ref: https://grafana.com/orgs/linkerd/dashboards
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
            - name: 'linkerd-viz'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/linkerd-viz

        dashboards:
          linkerd-viz:
            # all these charts are hosted at https://grafana.com/grafana/dashboards/{id}
            top-line:
              gnetId: 15474
              revision: 4
              datasource: prometheus
            health:
              gnetId: 15486
              revision: 3
              datasource: prometheus
            kubernetes:
              gnetId: 15479
              revision: 2
              datasource: prometheus
            namespace:
              gnetId: 15478
              revision: 3
              datasource: prometheus
            deployment:
              gnetId: 15475
              revision: 6
              datasource: prometheus
            pod:
              gnetId: 15477
              revision: 3
              datasource: prometheus
            service:
              gnetId: 15480
              revision: 3
              datasource: prometheus
            route:
              gnetId: 15481
              revision: 3
              datasource: prometheus
            authority:
              gnetId: 15482
              revision: 3
              datasource: prometheus
            cronjob:
              gnetId: 15483
              revision: 3
              datasource: prometheus
            job:
              gnetId: 15487
              revision: 3
              datasource: prometheus
            daemonset:
              gnetId: 15484
              revision: 3
              datasource: prometheus
            replicaset:
              gnetId: 15491
              revision: 3
              datasource: prometheus
            statefulset:
              gnetId: 15493
              revision: 3
              datasource: prometheus
            replicationcontroller:
              gnetId: 15492
              revision: 4
              datasource: prometheus
            prometheus:
              gnetId: 15489
              revision: 2
              datasource: prometheus
            prometheus-benchmark:
              gnetId: 15490
              revision: 2
              datasource: prometheus
            multicluster:
              gnetId: 15488
              revision: 3
              datasource: prometheus

    kubeProxy:
      enabled: false

    kubeControllerManager:
      enabled: false

    kubeEtcd:
      enabled: false

    kubeScheduler:
      enabled: false
